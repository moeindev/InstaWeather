plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'io.objectbox'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "ir.moeindeveloper.instaweather"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "WEATHER_API_KEY", getApiKey())

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    kapt {
        arguments {
            arg("objectbox.debug", true)
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.4.32'
    }

    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
        test.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    testOptions {
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

String getApiKey() {
    def propFile = rootProject.file("./local.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['WEATHER_API_KEY']
}

dependencies {
    //KTX
    implementation libraries.coreKTX
    implementation libraries.viewModelCompose

    implementation libraries.appCompat
    implementation libraries.material

    //Compose
    implementation libraries.composeUi
    implementation libraries.composeMaterial
    implementation libraries.composeUiTooling
    implementation libraries.composeAnimations
    implementation libraries.activityCompose


    //arch components
    implementation libraries.viewModelKTX
    implementation libraries.lifeCycleRuntime
    implementation libraries.commonJava8

    //navigation
    implementation libraries.navigation


    //hilt
    implementation libraries.hiltAndroid
    kapt libraries.hiltCompiler
    implementation libraries.hiltComposeNavigation


    //coroutines
    implementation libraries.coroutines
    implementation libraries.coroutinesCore

    //retrofit
    implementation libraries.retrofit
    implementation libraries.retrofitGson
    implementation libraries.sandwich

    //lottie
    implementation libraries.lottie

    //leakCanary
    debugImplementation libraries.leakCanary

    //whatIf
    implementation libraries.whatIf

    //bundler
    implementation libraries.bundler

    //coilImage
    implementation libraries.coilImage

    //Test libs
    testImplementation testLibraries.jUnit
    testImplementation testLibraries.coroutinesTest
    testImplementation testLibraries.coroutinesAndroidTest
    testImplementation testLibraries.robolectric
    testImplementation testLibraries.coreTesting
    testImplementation testLibraries.mockWebServer
    testImplementation testLibraries.mockitoKotlin
    testImplementation testLibraries.kotestAssertions
    androidTestImplementation testLibraries.androidJUnit
    androidTestImplementation testLibraries.espressoCore
}

kapt {
    correctErrorTypes true
}